{"version":3,"sources":["components/constants/PropTypes.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["userShape","PropTypes","shape","id","number","name","string","email","isRequired","User","arrayOf","title","completed","bool","user","_ref","data","react_default","a","createElement","TodoItem","todo","className","components_User_User","TodoList","todos","map","components_TodoItem_TodoItem","key","todosUrl","usersUrl","App","state","isLoading","isLoaded","hasError","handleClick","_callee","_ref2","_ref3","todosResponse","usersResponse","users","preparedTodos","regenerator_default","wrap","_context","prev","next","_this","setState","Promise","all","fetch","sent","Object","slicedToArray","json","_objectSpread","find","item","userId","originalTodos","t0","stop","sortByName","prevState","toConsumableArray","sort","b","localeCompare","resetTodos","_this$state","this","Fragment","type","onClick","components_TodoList_TodoList","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.476e4b46.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst userShape = PropTypes.shape({\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n}).isRequired;\n\nexport const TodoListProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport const UserProps = {\n  data: PropTypes.shape(userShape).isRequired,\n};\n\nexport const TodoItemProps = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape(userShape),\n  }).isRequired,\n};\n","import React from 'react';\nimport { UserProps } from '../constants/PropTypes';\nimport './User.css';\n\nconst User = ({ data }) => (\n  <div>\n    <p>\n      {data.name}\n    </p>\n    <p>\n      {data.email}\n    </p>\n  </div>\n);\n\nUser.propTypes = UserProps;\n\nexport default User;\n","import React from 'react';\nimport { TodoItemProps } from '../constants/PropTypes';\nimport User from '../User/User';\nimport './TodoItem.css';\n\nconst TodoItem = ({ todo }) => (\n  <li className={todo.completed ? 'card green_bg' : 'card red_bg'}>\n    <div>\n      <User data={todo.user} />\n    </div>\n    <p className=\"card-text\">{todo.title}</p>\n  </li>\n);\n\nTodoItem.propTypes = TodoItemProps;\n\nexport default TodoItem;\n","import React from 'react';\nimport { TodoListProps } from '../constants/PropTypes';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoList.css';\n\nconst TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem todo={todo} key={todo.id} />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = TodoListProps;\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport TodoList from './components/TodoList/TodoList';\n\nconst todosUrl = `https://jsonplaceholder.typicode.com/todos`;\nconst usersUrl = `https://jsonplaceholder.typicode.com/users`;\n\nclass App extends Component {\n  state = {\n    todos: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false,\n  }\n\n  handleClick = async() => {\n    this.setState({ isLoading: true });\n\n    try {\n      const [todosResponse, usersResponse] = await Promise.all([\n        fetch(todosUrl),\n        fetch(usersUrl),\n      ]);\n\n      const todos = await todosResponse.json();\n      const users = await usersResponse.json();\n\n      const preparedTodos = todos.map(todo => ({\n        ...todo,\n        user: users.find(item => item.id === todo.userId),\n      }));\n\n      this.setState({\n        todos: preparedTodos,\n        originalTodos: preparedTodos,\n        isLoaded: true,\n      });\n    } catch (error) {\n      this.setState({\n        hasError: true,\n        isLoading: false,\n      });\n    }\n  };\n\n  sortByName = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].sort(\n        (a, b) => a.title.localeCompare(b.title)\n      ),\n    }));\n  }\n\n  resetTodos = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos],\n    }));\n  }\n\n  render() {\n    const {\n      todos,\n      isLoading,\n      isLoaded,\n      hasError,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isLoaded ? (\n          <>\n            <h1 className=\"title\">Dynamic list of todos</h1>\n            <button\n              type=\"button\"\n              onClick={this.sortByName}\n              className=\"button button__sort\"\n            >\n              Sort\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.resetTodos}\n              className=\"button button__reset\"\n            >\n              Reset\n            </button>\n            <TodoList todos={todos} />\n          </>\n        ) : (\n          <>\n            <h1 className=\"title\">\n              {hasError ? 'Error: Failed to fetch' : 'Load todos' }\n            </h1>\n            <button type=\"button\" onClick={this.handleClick}>\n              {isLoading ? 'Loading...' : hasError ? 'Try Again' : 'Load'}\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}